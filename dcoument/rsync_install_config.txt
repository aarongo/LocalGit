rsync命令选项
-v, --verbose 详细模式输出   
-q, --quiet 精简输出模式   
-c, --checksum 打开校验开关，强制对文件传输进行校验   
-a, --archive 归档模式，表示以递归方式传输文件，并保持所有文件属性，等于-rlptgoD   
-r, --recursive 对子目录以递归模式处理   
-R, --relative 使用相对路径信息   
-b, --backup 创建备份，也就是对于目的已经存在有同样的文件名时，将老的文件重新命名为~filename。可以使用--suffix选项来指定不同的备份文件前缀。   
--backup-dir 将备份文件(如~filename)存放在在目录下。   
-suffix=SUFFIX 定义备份文件前缀   
-u, --update 仅仅进行更新，也就是跳过所有已经存在于DST，并且文件时间晚于要备份的文件。(不覆盖更新的文件)   
-l, --links 保留软链结   
-L, --copy-links 想对待常规文件一样处理软链结   
--copy-unsafe-links 仅仅拷贝指向SRC路径目录树以外的链结   
--safe-links 忽略指向SRC路径目录树以外的链结   
-H, --hard-links 保留硬链结   
-p, --perms 保持文件权限   
-o, --owner 保持文件属主信息   
-g, --group 保持文件属组信息   
-D, --devices 保持设备文件信息   
-t, --times 保持文件时间信息   
-S, --sparse 对稀疏文件进行特殊处理以节省DST的空间   
-n, --dry-run现实哪些文件将被传输   
-W, --whole-file 拷贝文件，不进行增量检测   
-x, --one-file-system 不要跨越文件系统边界   
-B, --block-size=SIZE 检验算法使用的块尺寸，默认是700字节   
-e, --rsh=COMMAND 指定使用rsh、ssh方式进行数据同步   
--rsync-path=PATH 指定远程服务器上的rsync命令所在路径信息   
-C, --cvs-exclude 使用和CVS一样的方法自动忽略文件，用来排除那些不希望传输的文件   
--existing 仅仅更新那些已经存在于DST的文件，而不备份那些新创建的文件   
--delete 删除那些DST中SRC没有的文件   
--delete-excluded 同样删除接收端那些被该选项指定排除的文件   
--delete-after 传输结束以后再删除   
--ignore-errors 及时出现IO错误也进行删除   
--max-delete=NUM 最多删除NUM个文件   
--partial 保留那些因故没有完全传输的文件，以是加快随后的再次传输   
--force 强制删除目录，即使不为空   
--numeric-ids 不将数字的用户和组ID匹配为用户名和组名   
--timeout=TIME IP超时时间，单位为秒   
-I, --ignore-times 不跳过那些有同样的时间和长度的文件   
--size-only 当决定是否要备份文件时，仅仅察看文件大小而不考虑文件时间   
--modify-window=NUM 决定文件是否时间相同时使用的时间戳窗口，默认为0   
-T --temp-dir=DIR 在DIR中创建临时文件   
--compare-dest=DIR 同样比较DIR中的文件来决定是否需要备份   
-P 等同于 --partial   
--progress 显示备份过程   
-z, --compress 对备份的文件在传输时进行压缩处理   
--exclude=PATTERN 指定排除不需要传输的文件模式   
--include=PATTERN 指定不排除而需要传输的文件模式   
--exclude-from=FILE 排除FILE中指定模式的文件   
--include-from=FILE 不排除FILE指定模式匹配的文件   
--version 打印版本信息   
--address 绑定到特定的地址   
--config=FILE 指定其他的配置文件，不使用默认的rsyncd.conf文件   
--port=PORT 指定其他的rsync服务端口   
--blocking-io 对远程shell使用阻塞IO   
-stats 给出某些文件的传输状态   
--progress 在传输时现实传输过程   
--log-format=formAT 指定日志文件格式   
--password-file=FILE 从FILE中得到密码   
--bwlimit=KBPS 限制I/O带宽，KBytes per second   
-h, --help 显示帮助信息




rsync 服务器搭建
	#查看当前系统是否已经安装
		rpm -qa|grep rsync
		rsync-3.1.1-1.el6.rfx.x86_64
	#安装rsync服务
		wget http://pkgs.repoforge.org/rsync/rsync-3.1.1-1.el6.rfx.x86_64.rpm  && rpm -ivh rsync-3.1.1-1.el6.rfx.x86_64.rpm
	#CentOS 默认以xinetd模式运行rsync,rsync的xinetd配置文件是/etc/xinetd.d/rsync
		如果配置rsync以xinetd模式运行,更改配置文件
		cat  /etc/xinetd.d/rsync  更改读取配置文件选项
			server_args     = --daemon --config=/etc/rsyncd/rsyncd.conf
	#创建配置文件 统一规划目录 mkdir /etc/rsyncd
		# 创建配置文件
		touch /etc/rsyncd/rsyncd.conf
		# 创建密码文件
		touch /etc/rsyncd/rsyncd.passwd
		#权限修改
		chown root:root /etc/rsyncd/rsyncd.passwd
		chmod 600 /etc/rsyncd/rsyncd.passwd
		#配置一些服务欢迎及说明信息
		touch /etc/rsyncd/rsyncd.motd
	#配置配置文件
		vim /etc/rsyncd/rsyncd.conf
		pid file = /software/rsyncd.pid
		port = 873 (指定端口)
		address = 10.90.10.200 (指定本机ip)
		uid = root
		gid = root
		use chroot = yes
		read only = yes
		#limit access to private LANs
		#设置可访问的主机：如果多个ip则用空格隔开：192.168.0.3 192.168.0.4 192.168.0.5或者设置区间 192.168.0.3/5
		hosts allow=10.90.0.0/16
		hosts deny=*
		max connections = 5
		motd file = /etc/rsyncd/rsyncd.motd
		#This will give you a separate log file
		log file = /software/rsync.log
		#This will log every file transferred - up to 85,000+ per user, per sync
		transfer logging = yes
		log format = %t %a %m %f %b
		syslog facility = local3
		timeout = 300
		#方括号中设置模块名
		[backtest]
		#要同步服务器的目录路径
		path = /backup
		list=yes
		ignore errors
		#auth users是必须在服务器上存在的真实的系统用户，如果你想用多个用户，那就以,号隔开；比如 auth users = ljzhou,rsyncsir
		auth users = back
		#从服务器访问需要的密码文件
		secrets file = /etc/rsyncd/rsyncd.secrets
		comment = linuxsir tmp
		#设置不同步的目录或文件用空格隔开
		exclude = test/ test.php
	#启动rsync
		A.用xinted方式启动
			service xinted restart
		B.用独立方式启动
			/usr/bin/rsync --daemon --config=/etc/rsyncd/rsyncd.conf
	#rsync clients配置crond任务
		A.配置执行脚本
			#!/bin/bash
				#This rsync auto 
				rsync -avzP  --delete  --password-file=/root/rsync.secrets(内容格式为书写服务端定义的用户的密码并且保障权限为600:password )  back(服务端用户)@10.90.10.200::backtest(服务端定义的模块)  /data/(本机路径) 
		B.配置crond任务
			*/1 * * * * /root/rsync.sh (每分钟执行一次)
	#至此rsync配置完毕
